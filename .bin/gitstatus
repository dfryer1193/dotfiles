#!/bin/bash

. ~/.bash_colors

GIT_STATUS=$(git status -sb 2>/dev/null)

cur_branch=$(git branch 2>/dev/null | grep \* | grep -oE "[A-Za-z]{1,}")

commits_ahead=$(echo "${GIT_STATUS}" | grep -E "^##" | \
  grep -oE "ahead [0-9]{1,}" | awk '{print $2}')
commits_behind=$(echo "${GIT_STATUS}" | grep -E "^##" | \
  grep -oE "behind [0-9]{1,}" | awk '{print $2}')

num_added=$(echo "${GIT_STATUS}" | grep -E "^A " | wc -l)
num_modified=$(echo "${GIT_STATUS}" | grep -E "^ M" | wc -l)
num_untracked=$(echo "${GIT_STATUS}" | grep -E "^\?\?" | wc -l)
num_conflict=$(echo "${GIT_STATUS}" | grep -E "^AA" | wc -l)
num_stashed=$(git stash list 2>/dev/null | wc -l)

outstr=""
outstr=${outstr}${cur_branch}
branch_tracking=""
local_tracking=""

# branch tracking
if [[ ! -z "${commits_behind}" ]] && [[ ${commits_behind} -ne 0 ]]; then
  branch_tracking=${branch_tracking}"${RED}${commits_behind}<${RESET_COLOR}"
fi

if [[ ! -z "${commits_ahead}" ]] && [[ ${commits_ahead} -ne 0 ]]; then
  branch_tracking=${branch_tracking}"${GREEN}>${commits_ahead}${RESET_COLOR}"
fi

# local tracking
if [[ ! -z "${num_added}" ]] && [[ ${num_added} -ne 0 ]]; then
  local_tracking=${local_tracking}"${RED}A${num_added}${RESET_COLOR}"
fi

if [[ ! -z "${num_modified}" ]] && [[ ${num_modified} -ne 0 ]]; then
  local_tracking=${local_tracking}"${YELLOW}M${num_modified}${RESET_COLOR}"
fi

if [[ ! -z "${num_untracked}" ]] && [[ ${num_untracked} -ne 0 ]]; then
  local_tracking=${local_tracking}"${BLUE}?${num_untracked}${RESET_COLOR}"
fi

if [[ ! -z "${num_conflict}" ]] && [[ ${num_conflict} -ne 0 ]]; then
  local_tracking=${local_tracking}"${RED}X${num_conflict}${RESET_COLOR}"
fi

if [[ ! -z "${num_stashed}" ]] && [[ ${num_stashed} -ne 0 ]]; then
  local_tracking=${local_tracking}"${YELLOW}S${num_stashed}${RESET_COLOR}"
fi

outstr=${outstr}${branch_tracking}
if [[ ! -z "${local_tracking}" ]]; then
  outstr=${outstr}"|${local_tracking}"
fi

echo -e $outstr
